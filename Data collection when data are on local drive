# -*- coding: utf-8 -*-
"""
Created on Wed Nov  8 14:19:51 2023

@author: Eleni
"""

"""
Libraries
"""
import os
import pandas as pd
from datetime import datetime, timedelta
import re
"""
Define the directory where your Excel files are located
"""
 
base_directory = "your directory path where the files from IPTO are located"
 
"""
Define the empty dataframes that we will be working on
"""
df_hydro = pd.DataFrame()
df_lignite = pd.DataFrame()
df_gas = pd.DataFrame()
df_res = pd.DataFrame()
df_net_load = pd.DataFrame()
df_inter = pd.DataFrame()
 
"""
Working dates 2018 to 2020, the file name changes on November 2nd 2020
"""
 
start_date = datetime(2020, 11, 2)
end_date = datetime(2023, 11, 6)
date_format = "%Y%m%d"
current_date = start_date
 

"""
Loop the procedure 
"""
while current_date <= end_date:
    date_str = current_date.strftime(date_format)
    print(date_str)
    file_name = f"Unit Production and System Facts {date_str}.xls"
    file_path = os.path.join(base_directory, file_name)
    file_path = re.sub(r'\\', '/', file_path)
    print(file_path)
    if os.path.exists(file_path):
        try:
            # Read the XLSX file into a pandas DataFrame
            df1 = pd.read_excel(file_path, sheet_name="System_Production", converters={'(ΣΤΟΙΧΕΙΑ SCADA ΜΗ-ΠΙΣΤΟΠΟΙΗΜΕΝΑ)':str})
        
            # Hydro
            substring = 'ΣΥΝΟΛΟ ΥΔΡΟΗΛΕΚΤΡΙΚΩΝ'
            filtered = df1[df1.apply(lambda row: row.astype(str).str.contains(substring, case=False).any(), axis=1)]
            wanted_index = filtered.index.tolist()
        
            if not wanted_index:
                substring = 'TOTAL HYDRO'
                filtered = df1[df1.apply(lambda row: row.astype(str).str.contains(substring, case=False).any(), axis=1)]
                wanted_index = filtered.index.tolist()
        
            values = df1.iloc[wanted_index[len(wanted_index) - 1], 2:26].sum()  # Sum columns 2 to 25
            row = pd.DataFrame([[values]], columns=['Total Hydro'], index=[date_str])
            df_hydro = pd.concat([df_hydro, row])
            df_hydro = df_hydro.rename(index={wanted_index[len(wanted_index) - 1]: date_str})
            
            #Lignite
            substring = 'ΣΥΝΟΛΟ ΛΙΓΝΙΤΙΚΩΝ'
            filtered = df1[df1.apply(lambda row: row.astype(str).str.contains(substring, case=False).any(), axis=1)]
            wanted_index = filtered.index.tolist()
            if not wanted_index:
                substring = 'TOTAL LIGNITE'
                filtered = df1[df1.apply(lambda row: row.astype(str).str.contains(substring, case=False).any(), axis=1)]
                wanted_index = filtered.index.tolist()
            values = df1.iloc[wanted_index[len(wanted_index) - 1], 2:26].sum()  # Sum columns 2 to 25
            row = pd.DataFrame([[values]], columns=['Total Lignite'], index=[date_str])
            df_lignite = pd.concat([df_lignite, row])
            df_lignite = df_lignite.rename(index={wanted_index[len(wanted_index)-1]: date_str}) 
           
            #Gas
            substring = 'ΣΥΝΟΛΟ Φ. ΑΕΡΙΟΥ'
            filtered = df1[df1.apply(lambda row: row.astype(str).str.contains(substring, case=False).any(), axis=1)]
            wanted_index = filtered.index.tolist()
            if not wanted_index:
                substring = 'TOTAL GAS'
                filtered = df1[df1.apply(lambda row: row.astype(str).str.contains(substring, case=False).any(), axis=1)]
                wanted_index = filtered.index.tolist()
            values = df1.iloc[wanted_index[len(wanted_index) - 1], 2:26].sum()  # Sum columns 2 to 25
            row = pd.DataFrame([[values]], columns=['Total Gas'], index=[date_str])
            df_gas = pd.concat([df_gas, row])
            df_gas = df_gas.rename(index={wanted_index[len(wanted_index)-1]: date_str}) 

            #RES
            substring = 'TOTAL RES'
            filtered = df1[df1.apply(lambda row: row.astype(str).str.contains(substring, case=False).any(), axis=1)]
            wanted_index = filtered.index.tolist()
            if not wanted_index:
                substring = 'ΣΥΝΟΛΟ ΑΙΟΛΙΚΩΝ'
                filtered = df1[df1.apply(lambda row: row.astype(str).str.contains(substring, case=False).any(), axis=1)]
                wanted_index = filtered.index.tolist()
            values = df1.iloc[wanted_index[len(wanted_index) - 1], 2:26].sum()  # Sum columns 2 to 25
            row = pd.DataFrame([[values]], columns=['Total RES'], index=[date_str])
            df_res = pd.concat([df_res, row])
            df_res = df_res.rename(index={wanted_index[len(wanted_index)-1]: date_str})  
           
            #Net Load
            substring = 'NET LOAD'
            filtered = df1[df1.apply(lambda row: row.astype(str).str.contains(substring, case=False).any(), axis=1)]
            wanted_index = filtered.index.tolist()
            if not wanted_index:
                substring = 'ΚΑΘΑΡΟ ΦΟΡΤΙΟ'
                filtered = df1[df1.apply(lambda row: row.astype(str).str.contains(substring, case=False).any(), axis=1)]
                wanted_index = filtered.index.tolist()
            values = df1.iloc[wanted_index[len(wanted_index) - 1], 2:26].sum()  # Sum columns 2 to 25
            row = pd.DataFrame([[values]], columns=['Total Net Load'], index=[date_str])
 
            df_net_load = pd.concat([df_net_load, row])
            df_net_load = df_net_load.rename(index={wanted_index[len(wanted_index)-1]: date_str})
            
           #Interconections
            substring = 'EXPORTS-IMPORTS'
            filtered = df1[df1.apply(lambda row: row.astype(str).str.contains(substring, case=False).any(), axis=1)]
            wanted_index = filtered.index.tolist()
 
            if not wanted_index:
                substring = 'ΚΑΘΑΡΟ ΔΙΑΣΥΝΔΕΣΕΩΝ'
                filtered = df1[df1.apply(lambda row: row.astype(str).str.contains(substring, case=False).any(), axis=1)]
                wanted_index = filtered.index.tolist()
 
            values = df1.iloc[wanted_index[len(wanted_index) - 1], 2:26].sum()  # Sum columns 2 to 25
            row = pd.DataFrame([[values]], columns=['Exports - Imports'], index=[date_str])
 
            df_inter = pd.concat([df_inter, row])
            df_inter = df_inter.rename(index={wanted_index[len(wanted_index)-1]: date_str})

        except Exception as e:
            print(f"Error reading file: {file_name}")

    current_date += timedelta(days=1)

 
"""
Repeat the procedure for the rest of the files
"""
 
start_date = datetime(2018, 1, 1)
end_date = datetime(2020, 11, 1)
date_format = "%Y%m%d"
current_date = start_date
 

"""
Loop the procedure 
"""
while current_date <= end_date:
    date_str = current_date.strftime(date_format)
    print(date_str)
    file_name = f"{date_str} InterconnectedSystemReport.xls"
    file_path = os.path.join(base_directory, file_name)
    file_path = re.sub(r'\\', '/', file_path)
    print(file_path)
    if os.path.exists(file_path):
        try:
            # Read the XLSX file into a pandas DataFrame
            df1 = pd.read_excel(file_path, sheet_name="System_Production", converters={'(ΣΤΟΙΧΕΙΑ SCADA ΜΗ-ΠΙΣΤΟΠΟΙΗΜΕΝΑ)':str})
        
            # Hydro
            substring = 'ΣΥΝΟΛΟ ΥΔΡΟΗΛΕΚΤΡΙΚΩΝ'
            filtered = df1[df1.apply(lambda row: row.astype(str).str.contains(substring, case=False).any(), axis=1)]
            wanted_index = filtered.index.tolist()
        
            if not wanted_index:
                substring = 'TOTAL HYDRO'
                filtered = df1[df1.apply(lambda row: row.astype(str).str.contains(substring, case=False).any(), axis=1)]
                wanted_index = filtered.index.tolist()
        
            values = df1.iloc[wanted_index[len(wanted_index) - 1], 2:26].sum()  # Sum columns 2 to 25
            row = pd.DataFrame([[values]], columns=['Total Hydro'], index=[date_str])
            df_hydro = pd.concat([df_hydro, row])
            df_hydro = df_hydro.rename(index={wanted_index[len(wanted_index) - 1]: date_str})
            
            #Lignite
            substring = 'ΣΥΝΟΛΟ ΛΙΓΝΙΤΙΚΩΝ'
            filtered = df1[df1.apply(lambda row: row.astype(str).str.contains(substring, case=False).any(), axis=1)]
            wanted_index = filtered.index.tolist()
            if not wanted_index:
                substring = 'TOTAL LIGNITE'
                filtered = df1[df1.apply(lambda row: row.astype(str).str.contains(substring, case=False).any(), axis=1)]
                wanted_index = filtered.index.tolist()
            values = df1.iloc[wanted_index[len(wanted_index) - 1], 2:26].sum()  # Sum columns 2 to 25
            row = pd.DataFrame([[values]], columns=['Total Lignite'], index=[date_str])
            df_lignite = pd.concat([df_lignite, row])
            df_lignite = df_lignite.rename(index={wanted_index[len(wanted_index)-1]: date_str}) 
           
            #Gas
            substring = 'ΣΥΝΟΛΟ Φ. ΑΕΡΙΟΥ'
            filtered = df1[df1.apply(lambda row: row.astype(str).str.contains(substring, case=False).any(), axis=1)]
            wanted_index = filtered.index.tolist()
            if not wanted_index:
                substring = 'TOTAL GAS'
                filtered = df1[df1.apply(lambda row: row.astype(str).str.contains(substring, case=False).any(), axis=1)]
                wanted_index = filtered.index.tolist()
            values = df1.iloc[wanted_index[len(wanted_index) - 1], 2:26].sum()  # Sum columns 2 to 25
            row = pd.DataFrame([[values]], columns=['Total Gas'], index=[date_str])
            df_gas = pd.concat([df_gas, row])
            df_gas = df_gas.rename(index={wanted_index[len(wanted_index)-1]: date_str}) 

            #RES
            substring = 'TOTAL RES'
            filtered = df1[df1.apply(lambda row: row.astype(str).str.contains(substring, case=False).any(), axis=1)]
            wanted_index = filtered.index.tolist()
            if not wanted_index:
                substring = 'ΣΥΝΟΛΟ ΑΙΟΛΙΚΩΝ'
                filtered = df1[df1.apply(lambda row: row.astype(str).str.contains(substring, case=False).any(), axis=1)]
                wanted_index = filtered.index.tolist()
            values = df1.iloc[wanted_index[len(wanted_index) - 1], 2:26].sum()  # Sum columns 2 to 25
            row = pd.DataFrame([[values]], columns=['Total RES'], index=[date_str])
            df_res = pd.concat([df_res, row])
            df_res = df_res.rename(index={wanted_index[len(wanted_index)-1]: date_str})  
           
            #Net Load
            substring = 'NET LOAD'
            filtered = df1[df1.apply(lambda row: row.astype(str).str.contains(substring, case=False).any(), axis=1)]
            wanted_index = filtered.index.tolist()
            if not wanted_index:
                substring = 'ΚΑΘΑΡΟ ΦΟΡΤΙΟ'
                filtered = df1[df1.apply(lambda row: row.astype(str).str.contains(substring, case=False).any(), axis=1)]
                wanted_index = filtered.index.tolist()
            values = df1.iloc[wanted_index[len(wanted_index) - 1], 2:26].sum()  # Sum columns 2 to 25
            row = pd.DataFrame([[values]], columns=['Total Net Load'], index=[date_str])
 
            df_net_load = pd.concat([df_net_load, row])
            df_net_load = df_net_load.rename(index={wanted_index[len(wanted_index)-1]: date_str})
            
           #Interconections
            substring = 'EXPORTS-IMPORTS'
            filtered = df1[df1.apply(lambda row: row.astype(str).str.contains(substring, case=False).any(), axis=1)]
            wanted_index = filtered.index.tolist()
 
            if not wanted_index:
                substring = 'ΚΑΘΑΡΟ ΔΙΑΣΥΝΔΕΣΕΩΝ'
                filtered = df1[df1.apply(lambda row: row.astype(str).str.contains(substring, case=False).any(), axis=1)]
                wanted_index = filtered.index.tolist()
 
            values = df1.iloc[wanted_index[len(wanted_index) - 1], 2:26].sum()  # Sum columns 2 to 25
            row = pd.DataFrame([[values]], columns=['Exports - Imports'], index=[date_str])
 
            df_inter = pd.concat([df_inter, row])
            df_inter = df_inter.rename(index={wanted_index[len(wanted_index)-1]: date_str})

        except Exception as e:
            print(f"Error reading file: {file_name}")

    current_date += timedelta(days=1)

#df_hydro.head()
#df_lignite.head()
#df_gas.head()
#df_res.head()
#df_net_load.head()
#df_inter.head()

"""
Name the index and set it as datetime
"""

df_lignite.index = pd.to_datetime(df_lignite.index)
df_lignite.index.name = 'Date'

df_gas.index = pd.to_datetime(df_gas.index)
df_gas.index.name = 'Date'

df_res.index = pd.to_datetime(df_res.index)
df_res.index.name = 'Date'

df_net_load.index = pd.to_datetime(df_net_load.index)
df_net_load.index.name = 'Date'

df_inter.index = pd.to_datetime(df_inter.index)
df_inter.index.name = 'Date'

df_hydro.index = pd.to_datetime(df_hydro.index)
df_hydro.index.name = 'Date'

"""
Concat all dataframes to one
"""
df = pd.concat([df_lignite, df_gas, df_hydro, df_inter, df_res, df_net_load], axis=1)
#df.head()

"""
save the file as excel to local drive
"""

# We set the same directory to save the new file
output_directory = base_directory
#Set the file name
output_filename = '2018_2023.xlsx'  
 
# Create the full file path
output_file_path = f"{output_directory}/{output_filename}"
 
# Save the DataFrame to the Excel file, index = True to keep the index
df.to_excel(output_file_path, index=True)

